rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
  		function isAuthenticated() {
  					return request.auth != null;
  		}
  
  		function isUserAuthenticated(userId) {
          	return isAuthenticated() && userId == request.resource.data.userId;
      }



      function isValidUser(user) {
        return user.size() == 5
        && 'username' in user && user.username is string
        && 'userId' in user && user.userId is string
        && 'email' in user && user.email is string
        && 'createdAt' in user && user.createdAt is timestamp
        && 'userCredential' in user && user.userCredential is string;
      }
  
      // match /users/{userId} {
      //     allow read: if isAuthenticated();

      //     allow create: if isUserAuthenticated(userId)
      //     && isValidUser(request.resource.data)
      //     && request.auth.uid == request.resource.data.userCredential;
      // }

      match /users/{uid} {
          allow read: if isAuthenticated();
          allow create: if isUserAuthenticated(uid) && request.auth.uid == request.resource.data.uid;
      }
      
  }
}