rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

      //ユーザーがログインしているかを検証
  		function isAuthenticated() {
  					return request.auth != null;
  		}

      //ユーザーがログインしていること & 書き込まれるデータのuidプロパティが格納されるuidと一緒かどうか & ログインユーザーが書き込むuidと同じか
  		function isUserAuthenticated(uid) {
          	return isAuthenticated() && isUidOfDataSameToDocUid(uid) && isLoginUidSameToDocUid(uid);
      }

      //ログインユーザーがdocのuidと同じか
      function isLoginUidSameToDocUid(uid) {
            return uid == request.auth.uid;
      }

      //ログインしているユーザーのuidと送られてきたデータのuidが一致しているか確認する
      function isUidOfDataSameToLoginUid() {
        return request.auth.uid == request.resource.data.uid;
      }

      //書き込まれるデータのuidプロパティがdocのuidと一緒かどうか
      function isUidOfDataSameToDocUid(uid) {
        return uid == request.resource.data.uid;
      }


      // function isValidUser(user) {
      //   return user.size() == 5
      //   && 'username' in user && user.username is string
      //   && 'userId' in user && user.userId is string
      //   && 'email' in user && user.email is string
      //   && 'createdAt' in user && user.createdAt is timestamp
      //   && 'userCredential' in user && user.userCredential is string;
      // }
  
      // match /users/{userId} {
      //     allow read: if isAuthenticated();

      //     allow create: if isUserAuthenticated(userId)
      //     && isValidUser(request.resource.data)
      //     && request.auth.uid == request.resource.data.userCredential;
      // }

      match /users/{uid} {
          allow read: if isAuthenticated();
          allow create, update: if isUserAuthenticated(uid);

          match /posts/{postId} {
            allow read: if isAuthenticated();
            allow create, delete: if isUserAuthenticated(uid);

            match /postlikes/{uid} {
              allow read: if isAuthenticated();
              allow create: if isUserAuthenticated(uid);
              allow delete: if isLoginUidSameToDocUid(uid) && isAuthenticated();
            }
          }
      }

      match /communities/{communityId}/users/{uid} {
        allow read: if isAuthenticated();
        allow create, update: if isUserAuthenticated(uid);
        allow delete: if isLoginUidSameToDocUid(uid) && isAuthenticated();
      }
  }
}